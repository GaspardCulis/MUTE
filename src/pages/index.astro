---
import FontRadioButton from "../components/editor/FontRadioButton.astro";
import TitleRowEdit from "../components/editor/TitleRowEdit.astro";
import TitleView from "../components/TitleView.astro";
import EditorPanel from "../layouts/EditorPanel.astro";
import Layout from "../layouts/Layout.astro";
import SubmitButton from "../components/SubmitButton.astro";
import Checkbox from "../components/Checkbox.astro";

import Fonts from "../../public/title-fonts/fonts.json";
---

<Layout title="Welcome to Astro.">
	<main>
		<TitleView />
		<section id="editor">
			<EditorPanel width={3} height={2}>
				<h1>Top</h1>
				<TitleRowEdit row_id="title.top" selected />

				<h1>Middle</h1>
				<TitleRowEdit row_id="title.middle" />

				<h1>Bottom</h1>
				<TitleRowEdit row_id="title.bottom" />
			</EditorPanel>
			<EditorPanel width={2} height={2}>
				<h1>Save</h1>
				<form id="save-form">
					<Checkbox id="eula-checkbox" required
						>I agree to <a
							href="https://www.minecraft.net/en-us/eula"
							target="_blank"
							style="color: inherit;">Mojang's EULA</a
						></Checkbox
					>
					<SubmitButton id="save-button">Save</SubmitButton>
				</form>
			</EditorPanel>
			<EditorPanel width={4} height={4}>
				<h1>Fonts</h1>
				<div id="fonts-list">
					{Fonts.map((font) => <FontRadioButton font_id={font.id} />)}
				</div>
			</EditorPanel>
			<EditorPanel width={1} height={4}>
				<h1>Textures</h1>
				<div id="textures-list-container">
					<div id="textures-list"></div>
				</div>
			</EditorPanel>
			<EditorPanel width={5}>jaaj5</EditorPanel>
		</section>
	</main>
</Layout>
<script>
	import Editor, { EditorVariable } from "../lib/Editor";
	import Font from "../lib/Font";

	const editor = Editor.get();

	const textures_list = document.querySelector(
		"#textures-list",
	) as HTMLDivElement;

	async function updateTexturesList() {
		const font_id = editor.variables["selection.font"].get();

		textures_list.innerHTML = "";

		const font = await Font.load(font_id);
		let texture_found = false;

		for (let [texture_id, _texture] of Object.entries(font.textures)) {
			// @ts-ignore
			const selected_row = editor.variables[
				editor.variables["selection.title_row"].get()
			].get() as StyledText;

			let checked =
				texture_id ===
				selected_row.text[
					editor.variables["selection.title_column_index"].get()
				].texture;
			texture_found = checked || texture_found;

			let div = document.createElement("div");
			div.innerHTML += `
				<input type="radio" id="${texture_id}" name="texture" ${
					checked ? "checked" : ""
				} />
				<label for="${texture_id}">
					<img 
						height="44px"
						draggable=false
						src="/title-fonts/fonts/${font_id}/thumbnails/${texture_id}.png"
						alt="${texture_id}"
					/>
				</label>
			`;

			const input = div.querySelector("input") as HTMLInputElement;
			input.addEventListener("input", () => {
				editor.variables["selection.texture"].set(texture_id);
				const title_row_id = editor.variables["selection.title_row"].get();
				// @ts-ignore
				const title_row = editor.variables[
					title_row_id
				] as EditorVariable<StyledText>;
				const new_title_row = title_row.get();
				new_title_row.text[
					editor.variables["selection.title_column_index"].get()
				].texture = texture_id;
				title_row.set(new_title_row);
			});

			textures_list.appendChild(div);

			if (checked) {
				div.scrollIntoView();
			}
		}

		if (!texture_found) {
			editor.variables["selection.texture"].set(Object.keys(font.textures)[0]);
			const first_texture_button =
				textures_list.firstElementChild?.querySelector(
					"input",
				) as HTMLInputElement;
			first_texture_button.checked = true;
		}
	}

	updateTexturesList();

	editor.variables["selection.font"].on("changed", updateTexturesList);
	editor.variables["selection.texture"].on("changed", (new_texture) => {
		// Janky, but I'm tired :)
		const texture_button = textures_list.querySelector(
			`#${new_texture}`,
		) as HTMLInputElement;
		if (texture_button) {
			texture_button.checked = true;
		}
	});
</script>
<style>
	main {
		margin: auto;
		padding-block: 3rem;
		width: 1200px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}

	#editor {
		display: grid;
		gap: 2rem;

		grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));

		margin-top: 1rem;
	}

	#save-form {
		display: flex;
		flex-direction: column;
		justify-content: end;

		height: 100%;
	}

	#fonts-list {
		display: grid;

		grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
	}

	#textures-list-container {
		position: relative;
		width: 100%;
		height: 100%;
		overflow-y: auto;

		user-select: none;
	}

	#textures-list-container::-webkit-scrollbar {
		width: 12px;
	}

	#textures-list-container::-webkit-scrollbar-track {
		background: transparent;
	}

	#textures-list-container::-webkit-scrollbar-thumb {
		background-color: #ced2d6;
		border-block: 2px solid #e6e3e6;
		outline: 2px solid #211c21;
	}

	#textures-list {
		position: absolute;
		top: 4px;
		left: 0;
		right: 0;
		display: flex;
		flex-direction: column;
		align-items: center;

		width: 100%;

		overflow-y: hidden;
	}
</style>
<style is:inline>
	input[type="radio"][name="texture"] {
		display: none;
	}

	input[type="radio"][name="texture"] + label {
		opacity: 0.5;
		transition: opacity 100ms ease-in-out;
	}

	input[type="radio"][name="texture"]:checked + label {
		opacity: 1;
	}

	input[type="radio"][name="texture"]:checked + label > img {
		filter: drop-shadow(12px 12px 7px rgba(0, 0, 0, 0.5));
	}
</style>
