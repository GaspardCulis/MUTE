---

---

<div id="background"></div>
<style>
  #background {
    position: fixed;
    top: 0px;
    right: 0px;
    bottom: 0px;
    left: 0px;

    z-index: -1;
  }
</style>
<script>
  import * as THREE from "three";

  import skybox_0 from "../../public/skyboxes/cherry-grove/skybox_0.png";
  import skybox_1 from "../../public/skyboxes/cherry-grove/skybox_1.png";
  import skybox_2 from "../../public/skyboxes/cherry-grove/skybox_2.png";
  import skybox_3 from "../../public/skyboxes/cherry-grove/skybox_3.png";
  import skybox_4 from "../../public/skyboxes/cherry-grove/skybox_4.png";
  import skybox_5 from "../../public/skyboxes/cherry-grove/skybox_5.png";

  const background = document.querySelector("#background") as HTMLDivElement;

  const renderer = new THREE.WebGLRenderer();
  renderer.setSize(background.clientWidth, background.clientHeight);
  const scene = new THREE.Scene();
  const camera = new THREE.PerspectiveCamera(
    90,
    background.clientWidth / background.clientHeight,
    1,
    1000,
  );

  background.appendChild(renderer.domElement);

  const loader = new THREE.CubeTextureLoader();
  const texture = loader.load([
    skybox_0.src,
    skybox_1.src,
    skybox_2.src,
    skybox_3.src,
    skybox_4.src,
    skybox_5.src,
  ]);

  scene.background = texture;

  window.addEventListener("resize", (_ev) => {
    renderer.setSize(background.clientWidth, background.clientHeight);
    camera.aspect = background.clientWidth / background.clientHeight;
    camera.updateProjectionMatrix();
  });

  const clock = new THREE.Clock(true);
  function render() {
    requestAnimationFrame(render);

    camera.rotateY(-clock.getDelta() * 0.04);
    renderer.render(scene, camera);
  }
  render();
</script>
