---
export interface Props {
  placeholder: string;
  variableid: string;
  selected?: boolean;
}

const { placeholder, variableid: editor_variable_id, selected } = Astro.props;
---

<div class="title-input-field">
  <input
    class={`title-input ${selected ? "selected" : ""}`}
    type="text"
    placeholder={placeholder}
    data-variable-id={editor_variable_id}
  />
</div>
<script>
  import Editor, { EditorVariable } from "../../lib/Editor";

  const editor = Editor.get();

  const title_inputs = document.querySelectorAll(
    ".title-input",
  ) as NodeListOf<HTMLInputElement>;
  for (let input of title_inputs) {
    const variable_id = input.dataset.variableId as string;
    // @ts-ignore
    const variable: EditorVariable<StyledText> = editor.variables[variable_id];
    input.value = variable
      .get()
      .text.map((t) => t.text)
      .join();

    input.addEventListener("input", (_ev) => {
      variable.set({
        font: editor.variables["selection.font"].get(),
        text: [
          {
            text: input.value,
            texture: editor.variables["selection.texture"].get(),
          },
        ],
      });
    });

    input.addEventListener("focus", (_ev) => {
      editor.variables["selection.title_row"].set(variable_id);
    });

    editor.variables["selection.title_row"].on("changed", (new_value) => {
      if (new_value === variable_id) {
        input.classList.add("selected");
      } else {
        input.classList.remove("selected");
      }
    });
  }
</script>
<style>
  input {
    all: unset;
    margin-bottom: 1rem;
    padding-left: 1rem;
    padding-block: 0.6rem;
    background-color: #313131;
    outline: 4px solid #211c21;
    border-top: 8px solid #212421;
  }

  input.selected {
    background-color: #383738;
  }
</style>
